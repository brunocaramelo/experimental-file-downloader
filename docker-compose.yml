version: '3'

services:
  postgres:
    image: "postgres:9.6"
    environment:
      - POSTGRES_DB=file_downloader
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5434:5432"

  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:5.3.1
    container_name: schema-registry-file-downloader
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: zookeeper:2181
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - "8081:8081"

  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.1.3-java8
    networks:
      static-network:
        ipv4_address: 172.100.1.2
    ports:
      - 9002:9000
      - 9870:9870
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - compose/hadoop/hadoop.env

  datanode:
    image: bde2020/hadoop-datanode:2.0.0-hadoop3.1.3-java8
    networks:
      static-network:
        ipv4_address: 172.100.1.10
    ports:
      - 9864:9864
      - 9866:9866
    volumes:
      - hadoop_datanode:/hadoop/dfs/data
    environment:
      SERVICE_PRECONDITION: "namenode:9870"
    env_file:
      - compose/hadoop/hadoop.env
  spring-boot-jpa-docker-webapp:
    build:
      context: .
      dockerfile: Dockerfile
    image: docker-spring-kafka-file-downloader:1.0
    container_name: docker-spring-kafka-file-downloader
    volumes:
      - ./server:/home/gradle/server
    depends_on:
      - postgres
      - zookeeper
      - kafka
    links:
      - postgres
      - zookeeper
      - kafka
    ports:
      - 8084:8080
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - DATABASE_NAME=file_downloader  
      - KAFKA_SERVER_HOST=kafka:9092
      - SPRING_DATASOURCE_DRIVER_CLASS_NAME=org.postgresql.Driver
      - HTTP_REGISTRY_SCHEMA_SERVER_HOST=http://schmema-registry:8081
      - HDFS_SERVER_HOST=namenode:9002
      - JAVA_TOOL_OPTIONS=-XX:MinRAMPercentage=75 -XX:MaxRAMPercentage=75
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5434/file_downloader
networks:
  static-network:
    ipam:
      config:
        - subnet: 172.100.1.0/24

volumes:
  hadoop_namenode:
  hadoop_datanode:
